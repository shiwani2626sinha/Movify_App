{"version":3,"sources":["Component/Movie.js","Component/MovieInfo.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","Info","Movie","props","movie","Title","Year","imdbID","Poster","query","parts","split","RegExp","Highlighted","map","part","i","style","toLowerCase","fontWeight","onClick","onMovieSelect","src","alt","Container","Close","MovieInfoContainer","MovieInfo","useState","movieDetail","setDetail","selectedMovie","useEffect","axios","get","then","response","data","Type","imdbRating","Language","Released","Genre","Actors","Plot","body","AppName","Header","SearchBox","SearchInputBox","input","MovieList","App","SearchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","Axios","Search","onChange","event","clearTimeout","target","value","timeout","setTimeout","placeholder","length","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e04123f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst MovieContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    width: 250px;\r\n    box-shadow: 0 3px 10px 0 #aaa;\r\n    cursor: pointer;\r\n    border-radius: 0px;\r\n    background: #bbdddd;\r\n    box-shadow:  28px 28px 56px #839b9b,\r\n             -28px -28px 56px #f3ffff;\r\n    \r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 362px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    color: black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    \r\n`;\r\n\r\nconst Info = styled.span`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n\r\n`;\r\n\r\nconst Movie = (props) => {\r\n\r\n    const {Title, Year, imdbID, Poster} = props.movie;\r\n    const query = props.query;\r\n    const parts = Title.split(new RegExp(`(${query})`, 'gi'));\r\n    const Highlighted =     <span> { parts.map((part, i) => \r\n        <span key={i} style={part.toLowerCase() === query.toLowerCase() ? { fontWeight: 'bold' } : {} }>\r\n            { part }\r\n        </span>)\r\n    } </span>;\r\n     \r\n    return (\r\n        <MovieContainer onClick={()=> props.onMovieSelect(imdbID)}>\r\n            <CoverImage src={Poster} alt=\"  Poster missing!\">\r\n            </CoverImage>\r\n            <MovieName>{Highlighted}</MovieName>\r\n            <Info>Year: {Year}</Info>\r\n        </MovieContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default Movie;","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst API_KEY = 'c7d74ded';\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 20px 30px;\r\n    justify-content: center;\r\n    border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst Close = styled.span`\r\nright: 32px;\r\ntop: 32px;\r\nwidth: 32px;\r\nheight: 32px;\r\nopacity: 1;\r\ncolor: black;\r\ncursor:pointer\r\nfont-size: large;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 362px;\r\n`;\r\nconst Info = styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 20px;\r\n\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: black;\r\n    text-transform: capitalize;\r\n    \r\n`;\r\nconst MovieInfoContainer = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: black;\r\n    overflow: hidden;\r\n    margin: 4px 0;\r\n    text-transform: capitalise;\r\n    text-overflow: ellipsis;\r\n    & span {\r\n        opacity: 0.6;\r\n    }\r\n`;\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n\r\n    const [movieDetail, setDetail] = useState();\r\n    const { selectedMovie } = props;\r\n\r\n    useEffect(()=>{axios.get\r\n        (`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,)\r\n        .then((response)=>{setDetail(response.data)});\r\n    }, [selectedMovie]\r\n    );\r\n\r\n     return <Container>\r\n                {movieDetail?\r\n                <>\r\n                    <CoverImage src={movieDetail?.Poster}></CoverImage>\r\n                <Info>\r\n                    <MovieName>{movieDetail?.Type}: {movieDetail?.Title}</MovieName>\r\n                    <MovieInfoContainer>\r\n                        IMDB Rating : <span>{movieDetail?.imdbRating}</span>\r\n                    </MovieInfoContainer>\r\n                    <MovieInfoContainer>\r\n                        Language : <span>{movieDetail?.Language}</span>\r\n                    </MovieInfoContainer>\r\n                    <MovieInfoContainer>\r\n                        Released : <span>{movieDetail?.Released}</span>\r\n                    </MovieInfoContainer>\r\n                    <MovieInfoContainer>\r\n                        Genre : <span>{movieDetail?.Genre}</span>\r\n                    </MovieInfoContainer>\r\n                    <movieDetail>\r\n                        Actors : <span>{movieDetail?.Actors}</span>\r\n                    </movieDetail>\r\n                    <movieDetail>\r\n                        Plot : <span>{movieDetail?.Plot}</span>\r\n                    </movieDetail>\r\n                </Info>\r\n                <Close onClick={()=> props.onMovieSelect()}>X</Close>\r\n                </>\r\n                    :\"Loading...\"}\r\n                \r\n            </Container>\r\n };\r\n\r\n export default MovieInfo;","import styled from \"styled-components\";\nimport Movie  from \"./Component/Movie\";\nimport MovieInfo from \"./Component/MovieInfo\";\nimport React, { useState} from 'react';\nimport Axios from \"axios\";\n\n\n\nconst API_KEY = 'c7d74ded';\n\n//using styled-components library, creating styled objects and using them as JSX elements_tags\nconst Container = styled.body`\ndisplay : flex;\nflex-direction : column; \n\n`;\nconst AppName = styled.div`\n  margin-left: 5px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst MovieImage = styled.img`\n  width: 48px;\n  height: 48px;\n  margin: 15px;\n`;\nconst Header = styled.div`\ndisplay: flex;\nflex-direction: row;\n\ncolor: white;\npadding: 10px;\nheight:45px;\nfont-weight : bold;\nalign-items: center; \njustify-content:space-between;\nfont-family: 'Style Script', cursive;\nfont-size: 55px;\nborder-radius: 0px;\nbackground: #383939;\n\n`;\n\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  background-color: white;\n  justify-content: center;\n  width: 30%;\n  border-radius: 15px;\n  margin-left: 20px;\n  border : 5px\n  border-outline: black;\n  border-style: double;\n  \n`;\nconst SearchInputBox = styled.input`\n\n  margin-left: 15px;\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  width: 100%;\n`;\n\nconst MovieList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap:24px;\n justify-content: space-evenly;\n background-color: #bbdddd;\n`;\nconst MovieName = styled.span`\n    font-size: 18px;\n    font-weight: 400;\n    color: black;\n    margin: 15px 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    \n`;\n\n\n\nfunction App() {\n\n  const [SearchQuery, updateSearchQuery] = useState(\"\");\n  const [timeoutId, updateTimeoutId] = useState();\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n\n  //debouncing - wait for the user to stop typing search query\n\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n\n    updateMovieList(response.data.Search);\n  }\n\n  const onTextChange = (event) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(event.target.value);\n    const timeout = setTimeout(() => fetchData(event.target.value), 500);\n    updateTimeoutId(timeout);\n  }\n\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          Movify\n        </AppName>\n        <SearchBox>\n          <SearchInputBox \n            onChange = {onTextChange} \n            placeholder=\"Type Movie name...\"\n            value={SearchQuery}>\n          </SearchInputBox>\n        </SearchBox>\n      </Header>\n      {selectedMovie && <MovieInfo selectedMovie={selectedMovie} onMovieSelect={onMovieSelect} ></MovieInfo>}\n        <MovieList>\n         {movieList?.length\n         ? movieList.map((movie, index) =>( <Movie key={index} \n                                              movie = {movie} onMovieSelect={onMovieSelect} query={SearchQuery} />\n        )):\n         <MovieName>\"Movie Not found!\"</MovieName>} \n        </MovieList>\n    </Container>\n  );\n}\n\nexport default App;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}